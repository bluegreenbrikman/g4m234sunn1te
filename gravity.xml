<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Google.com" />
  <Content type="html"><![CDATA[
<!DOCTYPE html>
<html lang="en-us">
<head>
  <meta charset="utf-8"/>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/organization-schoogls/y@main/style.css"/>
  <style>
    canvas:focus { outline: none; }
    html, body {
      padding: 0;
      margin: 0;
      overflow: hidden;
      -webkit-user-select: none;
      user-select: none;
      height: 100%;
      -webkit-tap-highlight-color: rgba(0,0,0,0);
    }
  </style>
</head>
<body class="dark">
  <div id="unity-container" class="unity-desktop">
    <canvas id="unity-canvas" tabindex="-1"></canvas>
  </div>
  <div id="loading-cover" style="display:none;">
    <div id="unity-loading-bar">
      <div id="unity-logo">
        <img src="https://cdn.jsdelivr.net/gh/bubbls/UGS-file-encryption@287710a4fac80d3ea9187e9d27c8358034b2639b/pdctrsh91fc91.jpg"/>
      </div>
      <div id="unity-progress-bar-empty" style="display: none;">
        <div id="unity-progress-bar-full"></div>
      </div>
      <div class="spinner"></div>
    </div>
  </div>
  <script>
    const buildUrl = "https://cdn.jsdelivr.net/gh/organization-schoogls/y@main/Build";
    const loaderUrl = buildUrl + "/build.loader.js";
    const config = {
      dataUrl: buildUrl + "/build.data.unityweb",
      frameworkUrl: buildUrl + "/build.framework.js.unityweb",
      codeUrl: buildUrl + "/build.wasm.unityweb",
      streamingAssetsUrl: "StreamingAssets",
      companyName: "AutismDev",
      productName: "Gravity Mod",
      productVersion: "1.0.0.0"
    };
    const container = document.querySelector("#unity-container");
    const canvas = document.querySelector("#unity-canvas");
    const loadingCover = document.querySelector("#loading-cover");
    const progressBarEmpty = document.querySelector("#unity-progress-bar-empty");
    const progressBarFull = document.querySelector("#unity-progress-bar-full");
    const spinner = document.querySelector('.spinner');
    if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
      container.className = "unity-mobile";
    }
    loadingCover.style.background = "url('https://cdn.jsdelivr.net/gh/organization-schoogls/y@main/background.gif') center / cover";
    loadingCover.style.display = "";
    document.addEventListener('contextmenu', event => event.preventDefault());
    function FocusGame() {
      window.focus();
      canvas.focus();
    }
    window.addEventListener('pointerdown', FocusGame);
    window.addEventListener('touchstart', FocusGame);
    try {
      const script = document.createElement("script");
      script.src = loaderUrl;
      script.onload = () => {
        createUnityInstance(canvas, config, (progress) => {
          spinner.style.display = "none";
          progressBarEmpty.style.display = "";
          progressBarFull.style.width = `${100 * progress}%`;
        }).then((unityInstance) => {
          loadingCover.style.display = "none";
        }).catch((message) => {
          console.error("Unity load error:", message);
        });
      };
      document.body.appendChild(script);
    } catch (error) {
      console.error("Init error:", error);
    }
    window.addEventListener("unhandledrejection", function(event) {
      console.warn("Unhandled error ignored:", event.reason);
      event.preventDefault();
    });
  </script>
</body>
</html>
  ]]></Content>
</Module>
